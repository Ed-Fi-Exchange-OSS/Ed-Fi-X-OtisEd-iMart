/****** Object:  StoredProcedure [dbo].[sp_iMart_Transform_dim_Staff_edfi]    Script Date: 4:40:40 PM ******/
CREATE procedure [dbo].[sp_iMart_Transform_dim_Staff_edfi]
(
     @SAID varchar(30) = null,
     @Batch_Period_List varchar(max) = null
)
as

-- ============================================================================
-- Script UTC date: 2019-04-15 18:11:01
-- Description: Generated by OtisEd iMart Wizard Tool
-- Copyright: ©2019 Otis Educational Systems, Inc. All Rights Reserved
-- ============================================================================

-- Example:  exec [dbo].[sp_iMart_Transform_dim_Staff_edfi] @SAID='all', @Batch_Period_List='all'
/* 
<StatusList>
  <Status Code = "A">Assigned Waiting for mapping</Status>
  <Status Code = "I">Ignore for this implementation</Status>
  <Status Code = "M">Mapped and waiting for Review</Status>
  <Status Code = "U">Reviewed and deemed unacceptable.Needs Remapping</Status>
  <Status Code = "H">On Hold for this iteration, non-blocking</Status>
  <Status Code = "C"> Completed</Status>
</StatusList>
*/

--parameter processing
declare @BPLxml xml = (select cast('<a>'+replace(@Batch_Period_List,',','</a><a>') + '</a>' as xml))
declare @BPLtable table(Batch_Period varchar(50), primary key (Batch_Period))
insert into @BPLtable(Batch_Period) 
select ltrim(rtrim(t.value('.','nvarchar(50)'))) as Batch_Period from @BPLxml.nodes('/a') as x(t) where len(@Batch_Period_List)>0

declare @SAIDxml xml = (select cast('<a>'+replace(@SAID,',','</a><a>') + '</a>' as xml))
declare @SAIDtable table(SAID nvarchar(30), Agency nvarchar(30), primary key (SAID))
insert into @SAIDtable(SAID) 
select ltrim(rtrim(t.value('.','nvarchar(30)'))) as SAID from @SAIDxml.nodes('/a') as x(t) where len(@SAID)>0
update @SAIDtable set Agency=case when patindex('%-%', said) > 1 then left(said, patindex('%-%', said)-1 ) else said end

--<MappingInfo Table="dim_Staff"> 

--<MappingInfoCommon>

--</MappingInfoCommon>

select
     [Local_Staff_Id]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="Local_Staff_Id">
    IsNull((
	select top (1) ic.IdentificationCode
	  from [edfi].[StaffIdentificationCode] ic
	  join [edfi].[Descriptor] d 
	    on d.DescriptorId=ic.StaffIdentificationSystemDescriptorId
	 where d.CodeValue in ('District','School')
	   and ic.StaffUSI=[edfi].[Staff].StaffUSI
	   and ic.AssigningOrganizationIdentificationCode=[edfi].[StaffSchoolAssociation].SchoolId
	 order by case when d.CodeValue='District' then 1 else 2 end
	),'')
    --</MappingInfoStatus>
    )

    ,[Staff_Unique_Id]=convert(VarChar(32),
    --<MappingInfoStatus Status="C" Column="Staff_Unique_Id">
    [edfi].[Staff].StaffUniqueId
    --</MappingInfoStatus>
    )

    ,[Staff_State_Id_Nbr]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="Staff_State_Id_Nbr">
    IsNull((
	select top (1) ic.IdentificationCode
	  from [edfi].[StaffIdentificationCode] ic
	  join [edfi].[Descriptor] d on d.DescriptorId=ic.StaffIdentificationSystemDescriptorId
	 where d.CodeValue='State'
	),'')
    --</MappingInfoStatus>
    )

    ,[Staff_SSN]=convert(VarChar(11),
    --<MappingInfoStatus Status="C" Column="Staff_SSN">
    IsNull((
	select top (1) ic.IdentificationCode
	  from [edfi].[StaffIdentificationCode] ic
	  join [edfi].[Descriptor] d on d.DescriptorId=ic.StaffIdentificationSystemDescriptorId
	 where d.CodeValue='SSN'
	),'')
    --</MappingInfoStatus>
    )

    ,[Staff_First_Name]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="Staff_First_Name">
    [edfi].[Staff].FirstName
    --</MappingInfoStatus>
    )

    ,[Staff_Middle_Name]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="Staff_Middle_Name">
    IsNull([edfi].[Staff].MiddleName,'')
    --</MappingInfoStatus>
    )

    ,[Staff_Last_Name]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="Staff_Last_Name">
    [edfi].[Staff].LastSurname
    --</MappingInfoStatus>
    )

    ,[Staff_Name_Suffix]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="Staff_Name_Suffix">
    IsNull([edfi].[Staff].GenerationCodeSuffix,'')
    --</MappingInfoStatus>
    )

    ,[Staff_Full_Name]=convert(VarChar(254),
    --<MappingInfoStatus Status="C" Column="Staff_Full_Name">
    IsNull([edfi].[Staff].FirstName+' ','') + 
	IsNull([edfi].[Staff].MiddleName+' ','') + 
	IsNull([edfi].[Staff].LastSurname,'') + 
	IsNull(' '+[edfi].[Staff].GenerationCodeSuffix,'')
    --</MappingInfoStatus>
    )

    ,[Staff_Preferred_Name]=convert(VarChar(254),
    --<MappingInfoStatus Status="C" Column="Staff_Preferred_Name">
    IsNull((select FirstName 
			  from [edfi].[StudentOtherName] x 
			  join [edFi].[Descriptor] d on d.DescriptorId=x.OtherNameTypeDescriptorId 
			 where x.StudentUSI=[edfi].[Staff].StaffUSI and d.CodeValue='Nickname'),'')
    --</MappingInfoStatus>
    )

    ,[Staff_Sort_Name]=convert(VarChar(254),
    --<MappingInfoStatus Status="C" Column="Staff_Sort_Name">
	IsNull([edfi].[Staff].LastSurname,'') + 
	IsNull(' '+[edfi].[Staff].GenerationCodeSuffix,'')+','+
    IsNull(' '+[edfi].[Staff].FirstName,'') + 
	IsNull(' '+[edfi].[Staff].MiddleName,'')
    --</MappingInfoStatus>
    )

    ,[Staff_Birth_Date]=convert(Date,
    --<MappingInfoStatus Status="C" Column="Staff_Birth_Date">
    [edfi].[Staff].BirthDate
    --</MappingInfoStatus>
    )

    ,[Staff_Gender_Cd]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="Staff_Gender_Cd">
    IsNull((
	select top (1) d.[CodeValue]
      from [edFi].[Descriptor] d 
	 where d.DescriptorId=[edfi].[Staff].SexDescriptorId 
	),'--')
    --</MappingInfoStatus>
    )

    ,[Staff_Gender_Desc]=convert(VarChar(254),
    --<MappingInfoStatus Status="C" Column="Staff_Gender_Desc">
    IsNull((
	select top (1) d.[Description]
      from [edFi].[Descriptor] d 
	 where d.DescriptorId=[edfi].[Staff].SexDescriptorId 
	),'--')
    --</MappingInfoStatus>
    )

    ,[Staff_Gender_Sort_Order]=convert(SmallInt,
    --<MappingInfoStatus Status="C" Column="Staff_Gender_Sort_Order">
    IsNull((
	select top (1) coalesce(x.XrefSortOrder,d.DescriptorId-(select min(SexDescriptorId) from [edfi].[SexDescriptor]))
      from [edFi].[Descriptor] d 
	  left outer
	  join CodeXref x on x.CodeCategory='Gender - Local to State' and x.LocalCode=d.CodeValue
	 where d.DescriptorId=[edfi].[Staff].SexDescriptorId 
	),0)
    --</MappingInfoStatus>
    )

    ,[Staff_Primary_Ethnicity_Cd]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="Staff_Primary_Ethnicity_Cd">
    IsNull((select top (1) d.[CodeValue]
                   from [edfi].[StudentEducationOrganizationAssociationRace] x 
                   join [edfi].[Descriptor] d on d.DescriptorId=x.RaceDescriptorId
                  where x.StudentUSI=[edfi].[Staff].StaffUSI),'--')
    --</MappingInfoStatus>
    )

    ,[Staff_Type_Cd]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="Staff_Type_Cd">
    IsNull((
	select top (1) d.[CodeValue]
      from [edfi].[StaffEducationOrganizationAssignmentAssociation] x
	  join [edFi].[Descriptor] d on d.DescriptorId=x.StaffClassificationDescriptorId
	 where x.StaffUSI=[edfi].[Staff].StaffUSI
	   and x.EducationOrganizationId=[edfi].[StaffSchoolAssociation].SchoolId
	 order by x.OrderOfAssignment
	),'--')
    --</MappingInfoStatus>
    )

    ,[Staff_Type_Desc]=convert(VarChar(254),
    --<MappingInfoStatus Status="C" Column="Staff_Type_Desc">
    IsNull((
	select top (1) d.[Description]
      from [edfi].[StaffEducationOrganizationAssignmentAssociation] x
	  join [edFi].[Descriptor] d on d.DescriptorId=x.StaffClassificationDescriptorId
	 where x.StaffUSI=[edfi].[Staff].StaffUSI
	   and x.EducationOrganizationId=[edfi].[StaffSchoolAssociation].SchoolId
	 order by x.OrderOfAssignment
	),'--')
    --</MappingInfoStatus>
    )

    ,[Staff_Type_Sort_Order]=convert(SmallInt,
    --<MappingInfoStatus Status="C" Column="Staff_Type_Sort_Order">
    IsNull((
	select top (1) coalesce(x.XrefSortOrder,d.DescriptorId-(select min(StaffClassificationDescriptorId) from [edfi].[StaffClassificationDescriptor]))
      from [edfi].[StaffEducationOrganizationAssignmentAssociation] a
	  join [edFi].[Descriptor] d on d.DescriptorId=a.StaffClassificationDescriptorId
	  left outer
	  join CodeXref x on x.CodeCategory='StaffType - Local to State' and x.LocalCode=d.CodeValue
	 where a.StaffUSI=[edfi].[Staff].StaffUSI
	   and a.EducationOrganizationId=[edfi].[StaffSchoolAssociation].SchoolId
	 order by a.OrderOfAssignment
	),0)
    --</MappingInfoStatus>
    )

    ,[Hire_Date]=convert(Date,
    --<MappingInfoStatus Status="C" Column="Hire_Date">
    IsNull((
	select top (1) x.EmploymentHireDate
      from [edfi].[StaffEducationOrganizationAssignmentAssociation] x
	 where x.StaffUSI=[edfi].[Staff].StaffUSI
	   and x.EducationOrganizationId=[edfi].[StaffSchoolAssociation].SchoolId
	 order by x.OrderOfAssignment
	),'1753-01-01')
    --</MappingInfoStatus>
    )

    ,[Total_Salary_Amt]=convert(Decimal(9,2),
    --<MappingInfoStatus Status="H" Column="Total_Salary_Amt">
    0.0 -- Not found in EdFi
    --</MappingInfoStatus>
    )

    ,[Instruction_Salary_Amt]=convert(Decimal(9,2),
    --<MappingInfoStatus Status="H" Column="Instruction_Salary_Amt">
    0.0 -- Not found in EdFi
    --</MappingInfoStatus>
    )

    ,[Total_Contract_Hours]=convert(Decimal(9,2),
    --<MappingInfoStatus Status="H" Column="Total_Contract_Hours">
    0 -- Not found in EdFi
    --</MappingInfoStatus>
    )

    ,[Batch_Period]=convert(VarChar(50),
    --<MappingInfoStatus Status="C" Column="Batch_Period">
    [edfi].[StaffSchoolAssociation].SchoolYear
    --</MappingInfoStatus>
    )

    ,[SAID]=convert(VarChar(30),
    --<MappingInfoStatus Status="C" Column="SAID">
    [edfi].[StaffSchoolAssociation].SAID
    --</MappingInfoStatus>
    )

    ,[Date_Stamp]=convert(DateTime2,
    --<MappingInfoStatus Status="c" Column="Date_Stamp">
    [edfi].[StaffSchoolAssociation].LastModifiedDate
    --</MappingInfoStatus>
    )

  --<MappingInfoFrom>
  from [edfi].[StaffSchoolAssociation]
  join [edfi].[Staff] on [edfi].[Staff].StaffUSI=[edfi].[StaffSchoolAssociation].StaffUSI

 where (@Batch_Period_List='all' or [edfi].[StaffSchoolAssociation].SchoolYear in (select Batch_Period from @BPLtable))
   and (IsNull(@SAID,'all') in ('all','any') or [edfi].[StaffSchoolAssociation].SAID in (select SAID from @SAIDtable) )
  --</MappingInfoFrom>
--</MappingInfo>