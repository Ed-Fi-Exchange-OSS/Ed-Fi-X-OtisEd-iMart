/****** Object:  StoredProcedure [dbo].[sp_iMart_Load_dim_Marking_Period]    Script Date: 4:40:40 PM ******/
CREATE PROCEDURE [dbo].[sp_iMart_Load_dim_Marking_Period]
AS

-- ============================================================================
-- Script UTC date: 2019-04-22 13:59:06
-- Description: Generated by OtisEd iMart Wizard Tool
-- Copyright: ©2019 Otis Educational Systems, Inc. All Rights Reserved
-- ============================================================================

-- Example: EXEC [dbo].[sp_iMart_Load_dim_Marking_Period]

WITH StageData
AS (
SELECT
    -- Business Id (Concatenate Context and all Business Keys)
    -- Business Id deprecated

    -- Natural Key
    [HASH_KEY_BK]=CONVERT(Binary(16), HASHBYTES('MD5',
    IsNull(A.[Calendar_Track_Cd], '?') + CHAR(9)
    + IsNull(A.[Term_Cd], '?') + CHAR(9)
    + IsNull(A.[Marking_Period_Cd], '?') + CHAR(9)
    )), -- BK hash key

    -- Type 1 Field Hash
    [HASH_KEY_T1]=CONVERT(Binary(16), HASHBYTES('MD5',
    IsNull(A.[Calendar_Track_Desc], '?') + CHAR(9)
    + IsNull(A.[Summer_School_Ind], '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, A.[Track_First_Instructional_Date]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, A.[Track_Last_Instructional_Date]), '?') + CHAR(9)
    + IsNull(A.[Term_Desc], '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, A.[Term_First_Instructional_Date]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, A.[Term_Last_Instructional_Date]), '?') + CHAR(9)
    + IsNull(A.[Marking_Period_Desc], '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, A.[Marking_Period_Begin_Date]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, A.[Marking_Period_End_Date]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T19.[CALENDAR_TRACK_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T20.[TERM_KEY]), '?') + CHAR(9)
    )), -- T1 hash key

    -- Type 1 C (Track Changes with Sequence) Field Hash
    -- No T1C Fields Found

    -- Type 2 Field Hash
    -- No T2 Fields Found

    -- Type 12 (Update with T2 band) Field Hash
    -- No T12 Fields Found

    -- Foreign Key Columns
    [Calendar_Track_Key]=T19.[CALENDAR_TRACK_KEY],
    [Term_Key]=T20.[TERM_KEY],

    -- All Conform Table Columns
    [Calendar_Track_Cd]=A.[Calendar_Track_Cd],
    [Calendar_Track_Desc]=A.[Calendar_Track_Desc],
    [Calendar_Track_Sort_Order]=A.[Calendar_Track_Sort_Order],
    [Summer_School_Ind]=A.[Summer_School_Ind],
    [Track_First_Instructional_Date]=A.[Track_First_Instructional_Date],
    [Track_Last_Instructional_Date]=A.[Track_Last_Instructional_Date],
    [Term_Cd]=A.[Term_Cd],
    [Term_Desc]=A.[Term_Desc],
    [Term_Sort_Order]=A.[Term_Sort_Order],
    [Term_First_Instructional_Date]=A.[Term_First_Instructional_Date],
    [Term_Last_Instructional_Date]=A.[Term_Last_Instructional_Date],
    [Marking_Period_Cd]=A.[Marking_Period_Cd],
    [Marking_Period_Desc]=A.[Marking_Period_Desc],
    [Marking_Period_Sort_Order]=A.[Marking_Period_Sort_Order],
    [Marking_Period_Begin_Date]=A.[Marking_Period_Begin_Date],
    [Marking_Period_End_Date]=A.[Marking_Period_End_Date],
    [Calendar_Track_School_Id]=A.[Calendar_Track_School_Id],
    [Batch_Period]=A.[Batch_Period],
    [SAID]=A.[SAID],
    [Date_Stamp]=A.[Date_Stamp],

    OES_Litho=Row_Number() OVER (ORDER BY (SELECT 1))
FROM [conform].[dim_Marking_Period] A (NOLOCK)
LEFT OUTER JOIN [tdw].[dim_Calendar_Track] T19
     ON T19.[Calendar_Track_School_Id]=A.[Calendar_Track_School_Id]
    AND T19.[Calendar_Track_Cd]=A.[Calendar_Track_Cd]

LEFT OUTER JOIN [tdw].[dim_Term] T20
     ON T20.[Calendar_Track_Cd]=A.[Calendar_Track_Cd]
    AND T20.[Term_Cd]=A.[Term_Cd]
),

DataMerge AS (
SELECT
    [MissingBusinessKey]=CASE WHEN sd.[Calendar_Track_Cd] IS NULL OR sd.[Term_Cd] IS NULL OR sd.[Marking_Period_Cd] IS NULL THEN 1 ELSE 0 END,
    [MissingForeignKey]=CASE WHEN sd.[Calendar_Track_Key] IS NULL OR sd.[Term_Key] IS NULL THEN 1 ELSE 0 END,
    [DupCount]=Row_Number() OVER(partition BY sd.[Calendar_Track_Cd], sd.[Term_Cd], sd.[Marking_Period_Cd] ORDER BY sd.[Date_Stamp] DESC),
    [Marking_Period_Key_Temp]=k1.[Marking_Period_Key],
    [UpdateFlag]=CASE WHEN sd.[Hash_Key_T1] != k1.[Hash_Key_T1] THEN 1 ELSE 0 END,
    [NewSeqFlag]=0,
    [NewKeyFlag]=0,
    [NewRowFlag]=CASE WHEN k1.[Marking_Period_Key] IS NULL THEN 1 ELSE 0 END,
    sd.*
FROM StageData sd
left outer join [tdw].[dim_Marking_Period] K1
    on sd.[Hash_Key_BK] = K1.[Hash_Key_BK]

)

SELECT *,
    [Marking_Period_Key]=dm.[Marking_Period_Key_Temp],
    [DISCARDFLAG]=CASE WHEN [MissingForeignKey] = 1 OR [MissingBusinessKey] = 1 OR [DUPCOUNT] > 1 THEN 1 ELSE 0 END
FROM DataMerge dm
WHERE [NewRowFlag] = 1 --New Entity
   OR [NewKeyFlag] = 1 --New ADW Key (T2)
   OR [NewSeqFlag] = 1 --New Sequence (T1C)
   OR [UpdateFlag] = 1 --T1 Update
   OR [MissingBusinessKey] = 1 OR [DupCount] > 1 OR [MissingForeignKey] = 1 --Discard Record