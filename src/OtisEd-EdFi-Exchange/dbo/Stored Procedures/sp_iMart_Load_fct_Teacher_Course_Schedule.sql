/****** Object:  StoredProcedure [dbo].[sp_iMart_Load_fct_Teacher_Course_Schedule]    Script Date: 4:40:40 PM ******/
CREATE PROCEDURE [dbo].[sp_iMart_Load_fct_Teacher_Course_Schedule]
AS

-- ============================================================================
-- Script UTC date: 2019-04-22 13:59:06
-- Description: Generated by OtisEd iMart Wizard Tool
-- Copyright: ©2019 Otis Educational Systems, Inc. All Rights Reserved
-- ============================================================================

-- Example: EXEC [dbo].[sp_iMart_Load_fct_Teacher_Course_Schedule]

WITH StageData
AS (
SELECT
    -- Business Id (Concatenate Context and all Business Keys)
    -- Business Id deprecated

    -- Natural Key
    [HASH_KEY_BK]=CONVERT(Binary(16), HASHBYTES('MD5',
    IsNull(CONVERT(VARCHAR, T3.[ACADEMIC_YEAR_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T4.[DISTRICT_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T5.[CALENDAR_TRACK_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T6.[TERM_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T7.[COURSE_SECTION_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T8.[STAFF_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T9.[School_Key]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T10.[CYCLE_DAY_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T11.[PERIOD_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T12.[PERIOD_KEY]), '?') + CHAR(9)
    + IsNull(CONVERT(VARCHAR, T13.[DATE_KEY]), '?') + CHAR(9)
    )), -- BK hash key

    -- Type 1 Field Hash
    -- No T1 Fields Found

    -- Type 1 C (Track Changes with Sequence) Field Hash
    -- No T1C Fields Found

    -- Type 2 Field Hash
    -- No T2 Fields Found

    -- Type 12 (Update with T2 band) Field Hash
    -- No T12 Fields Found

    -- Foreign Key Columns
    [Academic_Year_Key]=T3.[ACADEMIC_YEAR_KEY],
    [District_Key]=T4.[DISTRICT_KEY],
    [Calendar_Track_Key]=T5.[CALENDAR_TRACK_KEY],
    [Term_Key]=T6.[TERM_KEY],
    [Course_Section_Key]=T7.[COURSE_SECTION_KEY],
    [Staff_Key]=T8.[STAFF_KEY],
    [School_Key]=T9.[School_Key],
    [Cycle_Day_Key]=T10.[CYCLE_DAY_KEY],
    [Start_Period_Key]=T11.[PERIOD_KEY],
    [End_Period_Key]=T12.[PERIOD_KEY],
    [Entered_Date_Key]=T13.[DATE_KEY],
    [Exited_Date_Key]=T14.[DATE_KEY],
    [Batch_Key]=T20.[Batch_Key],

    -- All Conform Table Columns
    [Academic_Year_Name]=A.[Academic_Year_Name],
    [District_Id]=A.[District_Id],
    [Calendar_Track_Cd]=A.[Calendar_Track_Cd],
    [Calendar_Track_School_Id]=A.[Calendar_Track_School_Id],
    [Term_Cd]=A.[Term_Cd],
    [Course_Cd]=A.[Course_Cd],
    [Course_School_Id]=A.[Course_School_Id],
    [Course_Section_Identifier]=A.[Course_Section_Identifier],
    [Local_Staff_Id]=A.[Local_Staff_Id],
    [School_Id]=A.[School_Id],
    [Cycle_Day_Cd]=A.[Cycle_Day_Cd],
    [Start-Period_Cd]=A.[Start-Period_Cd],
    [Start-Period_School_Id]=A.[Start-Period_School_Id],
    [End-Period_Cd]=A.[End-Period_Cd],
    [End-Period_School_Id]=A.[End-Period_School_Id],
    [Entered-Date_Of_Day]=A.[Entered-Date_Of_Day],
    [Exited-Date_Of_Day]=A.[Exited-Date_Of_Day],
    [Entered_Calendar_Date]=A.[Entered_Calendar_Date],
    [Exited_Calendar_Date]=A.[Exited_Calendar_Date],
    [Course_Enroll_Count]=A.[Course_Enroll_Count],
    [Primary_Secondary_CD]=A.[Primary_Secondary_CD],
    [Batch_Period]=A.[Batch_Period],
    [SAID]=A.[SAID],
    [Date_Stamp]=A.[Date_Stamp],
    [SourceIdentifier]=A.[SourceIdentifier],

    OES_Litho=Row_Number() OVER (ORDER BY (SELECT 1))
FROM [conform].[fct_Teacher_Course_Schedule] A (NOLOCK)
LEFT OUTER JOIN [tdw].[dim_Academic_Year] T3
     ON T3.[Academic_Year_Name]=A.[Academic_Year_Name]

LEFT OUTER JOIN [tdw].[dim_District] T4
     ON T4.[District_Id]=A.[District_Id]

LEFT OUTER JOIN [tdw].[dim_Calendar_Track] T5
     ON T5.[Calendar_Track_School_Id]=A.[Calendar_Track_School_Id]
    AND T5.[Calendar_Track_Cd]=A.[Calendar_Track_Cd]

LEFT OUTER JOIN [tdw].[dim_Term] T6
     ON T6.[Calendar_Track_Cd]=A.[Calendar_Track_Cd]
    AND T6.[Term_Cd]=A.[Term_Cd]

LEFT OUTER JOIN [tdw].[dim_Course_Section] T7
     ON T7.[Course_School_Id]=A.[Course_School_Id]
    AND T7.[Course_Cd]=A.[Course_Cd]
    AND T7.[Course_Section_Identifier]=A.[Course_Section_Identifier]

LEFT OUTER JOIN [tdw].[dim_Staff] T8
     ON T8.[Local_Staff_Id]=A.[Local_Staff_Id]

LEFT OUTER JOIN [tdw].[dim_School] T9
     ON T9.[District_Id]=A.[District_Id]
    AND T9.[School_Id]=A.[School_Id]

LEFT OUTER JOIN [tdw].[dim_Cycle_Day] T10
     ON T10.[Cycle_Day_Cd]=A.[Cycle_Day_Cd]

LEFT OUTER JOIN [tdw].[dim_Period] T11
     ON T11.[Period_School_Id]=A.[Start-Period_School_Id]
    AND T11.[Period_Cd]=A.[Start-Period_Cd]

LEFT OUTER JOIN [tdw].[dim_Period] T12
     ON T12.[Period_School_Id]=A.[End-Period_School_Id]
    AND T12.[Period_Cd]=A.[End-Period_Cd]

LEFT OUTER JOIN [tdw].[dim_Date] T13
     ON T13.[Date_Of_Day]=A.[Entered-Date_Of_Day]

LEFT OUTER JOIN [tdw].[dim_Date] T14
     ON T14.[Date_Of_Day]=A.[Exited-Date_Of_Day]

LEFT OUTER JOIN [tdw].[dim_Batch] T20
     ON T20.[Batch_Period]=A.[Batch_Period]
    AND T20.[SAID]=A.[SAID]
),

DataMerge AS (
SELECT
    [MissingBusinessKey]=CASE WHEN sd.[Academic_Year_Key] IS NULL OR sd.[District_Key] IS NULL OR sd.[Calendar_Track_Key] IS NULL OR sd.[Term_Key] IS NULL OR sd.[Course_Section_Key] IS NULL OR sd.[Staff_Key] IS NULL OR sd.[School_Key] IS NULL OR sd.[Cycle_Day_Key] IS NULL OR sd.[Start_Period_Key] IS NULL OR sd.[End_Period_Key] IS NULL OR sd.[Entered_Date_Key] IS NULL THEN 1 ELSE 0 END,
    [MissingForeignKey]=CASE WHEN sd.[Academic_Year_Key] IS NULL OR sd.[District_Key] IS NULL OR sd.[Calendar_Track_Key] IS NULL OR sd.[Term_Key] IS NULL OR sd.[Course_Section_Key] IS NULL OR sd.[Staff_Key] IS NULL OR sd.[School_Key] IS NULL OR sd.[Cycle_Day_Key] IS NULL OR sd.[Start_Period_Key] IS NULL OR sd.[End_Period_Key] IS NULL OR sd.[Entered_Date_Key] IS NULL OR sd.[Exited_Date_Key] IS NULL OR sd.[Batch_Key] IS NULL THEN 1 ELSE 0 END,
    [DupCount]=Row_Number() OVER(partition BY sd.[Academic_Year_Key], sd.[District_Key], sd.[Calendar_Track_Key], sd.[Term_Key], sd.[Course_Section_Key], sd.[Staff_Key], sd.[School_Key], sd.[Cycle_Day_Key], sd.[Start_Period_Key], sd.[End_Period_Key], sd.[Entered_Date_Key] ORDER BY sd.[Date_Stamp] DESC),
    [Teacher_Course_Schedule_Key_Temp]=k1.[Teacher_Course_Schedule_Key],
    [UpdateFlag]=1,
    [NewSeqFlag]=0,
    [NewKeyFlag]=0,
    [NewRowFlag]=CASE WHEN k1.[Teacher_Course_Schedule_Key] IS NULL THEN 1 ELSE 0 END,
    sd.*
FROM StageData sd
left outer join [tdw].[fct_Teacher_Course_Schedule] K1
    on sd.[Hash_Key_BK] = K1.[Hash_Key_BK]

)

SELECT *,
    [Teacher_Course_Schedule_Key]=dm.[Teacher_Course_Schedule_Key_Temp],
    [DISCARDFLAG]=CASE WHEN [MissingForeignKey] = 1 OR [MissingBusinessKey] = 1 OR [DUPCOUNT] > 1 THEN 1 ELSE 0 END
FROM DataMerge dm
WHERE [NewRowFlag] = 1 --New Entity
   OR [NewKeyFlag] = 1 --New ADW Key (T2)
   OR [NewSeqFlag] = 1 --New Sequence (T1C)
   OR [UpdateFlag] = 1 --T1 Update
   OR [MissingBusinessKey] = 1 OR [DupCount] > 1 OR [MissingForeignKey] = 1 --Discard Record